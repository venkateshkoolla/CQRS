//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ocas.Domestic.Crm.Entities
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public enum RecurringAppointmentMasterState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Open = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Completed = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Canceled = 2,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Scheduled = 3,
	}
	
	/// <summary>
	/// The Master appointment of a recurring appointment series.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("recurringappointmentmaster")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("CrmSvcUtil", "9.0.0.9479")]
	public partial class RecurringAppointmentMaster : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ActivityId = "activityid";
			public const string Id = "activityid";
			public const string ActivityTypeCode = "activitytypecode";
			public const string Category = "category";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string DayOfMonth = "dayofmonth";
			public const string DaysOfWeekMask = "daysofweekmask";
			public const string DeletedExceptionsList = "deletedexceptionslist";
			public const string Description = "description";
			public const string Duration = "duration";
			public const string EffectiveEndDate = "effectiveenddate";
			public const string EffectiveStartDate = "effectivestartdate";
			public const string EndTime = "endtime";
			public const string ExchangeRate = "exchangerate";
			public const string ExpansionStateCode = "expansionstatecode";
			public const string FirstDayOfWeek = "firstdayofweek";
			public const string GlobalObjectId = "globalobjectid";
			public const string GroupId = "groupid";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Instance = "instance";
			public const string InstanceTypeCode = "instancetypecode";
			public const string Interval = "interval";
			public const string IsAllDayEvent = "isalldayevent";
			public const string IsBilled = "isbilled";
			public const string IsMapiPrivate = "ismapiprivate";
			public const string IsNthMonthly = "isnthmonthly";
			public const string IsNthYearly = "isnthyearly";
			public const string IsRegenerate = "isregenerate";
			public const string IsRegularActivity = "isregularactivity";
			public const string IsWeekDayPattern = "isweekdaypattern";
			public const string IsWorkflowCreated = "isworkflowcreated";
			public const string LastExpandedInstanceDate = "lastexpandedinstancedate";
			public const string Location = "location";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string MonthOfYear = "monthofyear";
			public const string NextExpansionInstanceDate = "nextexpansioninstancedate";
			public const string Occurrences = "occurrences";
			public const string OptionalAttendees = "optionalattendees";
			public const string Organizer = "organizer";
			public const string OutlookOwnerApptId = "outlookownerapptid";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string PatternEndDate = "patternenddate";
			public const string PatternEndType = "patternendtype";
			public const string PatternStartDate = "patternstartdate";
			public const string PriorityCode = "prioritycode";
			public const string ProcessId = "processid";
			public const string RecurrencePatternType = "recurrencepatterntype";
			public const string RegardingObjectId = "regardingobjectid";
			public const string RequiredAttendees = "requiredattendees";
			public const string RuleId = "ruleid";
			public const string ScheduledEnd = "scheduledend";
			public const string ScheduledStart = "scheduledstart";
			public const string SeriesStatus = "seriesstatus";
			public const string ServiceId = "serviceid";
			public const string StageId = "stageid";
			public const string StartTime = "starttime";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string Subcategory = "subcategory";
			public const string Subject = "subject";
			public const string SubscriptionId = "subscriptionid";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string TransactionCurrencyId = "transactioncurrencyid";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string Account_RecurringAppointmentMasters = "Account_RecurringAppointmentMasters";
			public const string activity_pointer_recurringappointmentmaster = "activity_pointer_recurringappointmentmaster";
			public const string adx_webpage_RecurringAppointmentMasters = "adx_webpage_RecurringAppointmentMasters";
			public const string adx_website_RecurringAppointmentMasters = "adx_website_RecurringAppointmentMasters";
			public const string BulkOperation_RecurringAppointmentMaster = "BulkOperation_RecurringAppointmentMaster";
			public const string business_unit_recurringappointmentmaster_activities = "business_unit_recurringappointmentmaster_activities";
			public const string Campaign_RecurringAppointmentMasters = "Campaign_RecurringAppointmentMasters";
			public const string CampaignActivity_RecurringAppointmentMasters = "CampaignActivity_RecurringAppointmentMasters";
			public const string Contact_RecurringAppointmentMasters = "Contact_RecurringAppointmentMasters";
			public const string Contract_RecurringAppointmentMasters = "Contract_RecurringAppointmentMasters";
			public const string entitlement_RecurringAppointmentMasters = "entitlement_RecurringAppointmentMasters";
			public const string entitlementtemplate_RecurringAppointmentMasters = "entitlementtemplate_RecurringAppointmentMasters";
			public const string Incident_RecurringAppointmentMasters = "Incident_RecurringAppointmentMasters";
			public const string Invoice_RecurringAppointmentMasters = "Invoice_RecurringAppointmentMasters";
			public const string Lead_RecurringAppointmentMasters = "Lead_RecurringAppointmentMasters";
			public const string lk_recurringappointmentmaster_createdby = "lk_recurringappointmentmaster_createdby";
			public const string lk_recurringappointmentmaster_createdonbehalfby = "lk_recurringappointmentmaster_createdonbehalfby";
			public const string lk_recurringappointmentmaster_modifiedby = "lk_recurringappointmentmaster_modifiedby";
			public const string lk_recurringappointmentmaster_modifiedonbehalfby = "lk_recurringappointmentmaster_modifiedonbehalfby";
			public const string msdyn_postalbum_RecurringAppointmentMasters = "msdyn_postalbum_RecurringAppointmentMasters";
			public const string ocaslr_academicdata_RecurringAppointmentMasters = "ocaslr_academicdata_RecurringAppointmentMasters";
			public const string ocaslr_acceptedprivacystatement_RecurringAppointmentMasters = "ocaslr_acceptedprivacystatement_RecurringAppointmentMasters";
			public const string ocaslr_applicantactivity_RecurringAppointmentMasters = "ocaslr_applicantactivity_RecurringAppointmentMasters";
			public const string ocaslr_applicantmessage_RecurringAppointmentMasters = "ocaslr_applicantmessage_RecurringAppointmentMasters";
			public const string ocaslr_applicantscholarship_RecurringAppointmentMasters = "ocaslr_applicantscholarship_RecurringAppointmentMasters";
			public const string ocaslr_application_RecurringAppointmentMasters = "ocaslr_application_RecurringAppointmentMasters";
			public const string ocaslr_applicationcycle_RecurringAppointmentMasters = "ocaslr_applicationcycle_RecurringAppointmentMasters";
			public const string ocaslr_collegeapplicationcycle_RecurringAppointmentMasters = "ocaslr_collegeapplicationcycle_RecurringAppointmentMasters";
			public const string ocaslr_collegeinformation_RecurringAppointmentMasters = "ocaslr_collegeinformation_RecurringAppointmentMasters";
			public const string ocaslr_comments_RecurringAppointmentMasters = "ocaslr_comments_RecurringAppointmentMasters";
			public const string ocaslr_editexception_RecurringAppointmentMasters = "ocaslr_editexception_RecurringAppointmentMasters";
			public const string ocaslr_education_RecurringAppointmentMasters = "ocaslr_education_RecurringAppointmentMasters";
			public const string ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters = "ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters";
			public const string ocaslr_etmsdocumenttype_RecurringAppointmentMasters = "ocaslr_etmsdocumenttype_RecurringAppointmentMasters";
			public const string ocaslr_etmsfileformat_RecurringAppointmentMasters = "ocaslr_etmsfileformat_RecurringAppointmentMasters";
			public const string ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters = "ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters";
			public const string ocaslr_etmspartnerrole_RecurringAppointmentMasters = "ocaslr_etmspartnerrole_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscript_RecurringAppointmentMasters = "ocaslr_etmstranscript_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters = "ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscriptrequest_RecurringAppointmentMasters = "ocaslr_etmstranscriptrequest_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters = "ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters = "ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters";
			public const string ocaslr_etmstranscripttype_RecurringAppointmentMasters = "ocaslr_etmstranscripttype_RecurringAppointmentMasters";
			public const string ocaslr_financialtransaction_RecurringAppointmentMasters = "ocaslr_financialtransaction_RecurringAppointmentMasters";
			public const string ocaslr_graderecordstatus_RecurringAppointmentMasters = "ocaslr_graderecordstatus_RecurringAppointmentMasters";
			public const string ocaslr_helpfeature_RecurringAppointmentMasters = "ocaslr_helpfeature_RecurringAppointmentMasters";
			public const string ocaslr_helpitem_RecurringAppointmentMasters = "ocaslr_helpitem_RecurringAppointmentMasters";
			public const string ocaslr_helpsection_RecurringAppointmentMasters = "ocaslr_helpsection_RecurringAppointmentMasters";
			public const string ocaslr_institute_RecurringAppointmentMasters = "ocaslr_institute_RecurringAppointmentMasters";
			public const string ocaslr_internationalcreditassessment_RecurringAppointmentMasters = "ocaslr_internationalcreditassessment_RecurringAppointmentMasters";
			public const string ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters = "ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters";
			public const string ocaslr_jobexperience_RecurringAppointmentMasters = "ocaslr_jobexperience_RecurringAppointmentMasters";
			public const string ocaslr_monerispayments_RecurringAppointmentMasters = "ocaslr_monerispayments_RecurringAppointmentMasters";
			public const string ocaslr_norminggroup_RecurringAppointmentMasters = "ocaslr_norminggroup_RecurringAppointmentMasters";
			public const string ocaslr_ocfileerrormessage_RecurringAppointmentMasters = "ocaslr_ocfileerrormessage_RecurringAppointmentMasters";
			public const string ocaslr_ocfileprocessdetail_RecurringAppointmentMasters = "ocaslr_ocfileprocessdetail_RecurringAppointmentMasters";
			public const string ocaslr_ocfileprocessheader_RecurringAppointmentMasters = "ocaslr_ocfileprocessheader_RecurringAppointmentMasters";
			public const string ocaslr_oenbatch_RecurringAppointmentMasters = "ocaslr_oenbatch_RecurringAppointmentMasters";
			public const string ocaslr_oenbatchapplicant_RecurringAppointmentMasters = "ocaslr_oenbatchapplicant_RecurringAppointmentMasters";
			public const string ocaslr_offer_RecurringAppointmentMasters = "ocaslr_offer_RecurringAppointmentMasters";
			public const string ocaslr_offeracceptance_RecurringAppointmentMasters = "ocaslr_offeracceptance_RecurringAppointmentMasters";
			public const string ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters = "ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters";
			public const string ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters = "ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters";
			public const string ocaslr_ostupload_RecurringAppointmentMasters = "ocaslr_ostupload_RecurringAppointmentMasters";
			public const string ocaslr_paymentresult_RecurringAppointmentMasters = "ocaslr_paymentresult_RecurringAppointmentMasters";
			public const string ocaslr_paymenttransactiondetail_RecurringAppointmentMasters = "ocaslr_paymenttransactiondetail_RecurringAppointmentMasters";
			public const string ocaslr_peterequestlog_RecurringAppointmentMasters = "ocaslr_peterequestlog_RecurringAppointmentMasters";
			public const string ocaslr_privacystatement_RecurringAppointmentMasters = "ocaslr_privacystatement_RecurringAppointmentMasters";
			public const string ocaslr_program_entrylevels_RecurringAppointmentMasters = "ocaslr_program_entrylevels_RecurringAppointmentMasters";
			public const string ocaslr_programchoice_RecurringAppointmentMasters = "ocaslr_programchoice_RecurringAppointmentMasters";
			public const string ocaslr_programintakeentrysemester_RecurringAppointmentMasters = "ocaslr_programintakeentrysemester_RecurringAppointmentMasters";
			public const string ocaslr_secondconsentapplicant_RecurringAppointmentMasters = "ocaslr_secondconsentapplicant_RecurringAppointmentMasters";
			public const string ocaslr_shsmcompletion_RecurringAppointmentMasters = "ocaslr_shsmcompletion_RecurringAppointmentMasters";
			public const string ocaslr_softmergecandidate_RecurringAppointmentMasters = "ocaslr_softmergecandidate_RecurringAppointmentMasters";
			public const string ocaslr_stringresource_RecurringAppointmentMasters = "ocaslr_stringresource_RecurringAppointmentMasters";
			public const string ocaslr_supportingdocument_RecurringAppointmentMasters = "ocaslr_supportingdocument_RecurringAppointmentMasters";
			public const string ocaslr_systemconfiguration_RecurringAppointmentMasters = "ocaslr_systemconfiguration_RecurringAppointmentMasters";
			public const string ocaslr_test_RecurringAppointmentMasters = "ocaslr_test_RecurringAppointmentMasters";
			public const string ocaslr_testdetail_RecurringAppointmentMasters = "ocaslr_testdetail_RecurringAppointmentMasters";
			public const string ocaslr_timezone_RecurringAppointmentMasters = "ocaslr_timezone_RecurringAppointmentMasters";
			public const string ocaslr_transcript_RecurringAppointmentMasters = "ocaslr_transcript_RecurringAppointmentMasters";
			public const string ocaslr_transcriptrequest_RecurringAppointmentMasters = "ocaslr_transcriptrequest_RecurringAppointmentMasters";
			public const string ocaslr_transcriptrequestexception_RecurringAppointmentMasters = "ocaslr_transcriptrequestexception_RecurringAppointmentMasters";
			public const string ocaslr_transcripttransmission_RecurringAppointmentMasters = "ocaslr_transcripttransmission_RecurringAppointmentMasters";
			public const string ocaslr_transmissiondetail_RecurringAppointmentMasters = "ocaslr_transmissiondetail_RecurringAppointmentMasters";
			public const string ocaslr_transmissionerrormessage_RecurringAppointmentMasters = "ocaslr_transmissionerrormessage_RecurringAppointmentMasters";
			public const string ocaslr_transmissionheader_RecurringAppointmentMasters = "ocaslr_transmissionheader_RecurringAppointmentMasters";
			public const string ocaslr_transmissionstatus_RecurringAppointmentMasters = "ocaslr_transmissionstatus_RecurringAppointmentMasters";
			public const string ocaslr_transmissionsummary_RecurringAppointmentMasters = "ocaslr_transmissionsummary_RecurringAppointmentMasters";
			public const string ocaslr_voucher_RecurringAppointmentMasters = "ocaslr_voucher_RecurringAppointmentMasters";
			public const string ocaslr_vouchercodegeneration_RecurringAppointmentMasters = "ocaslr_vouchercodegeneration_RecurringAppointmentMasters";
			public const string Opportunity_RecurringAppointmentMasters = "Opportunity_RecurringAppointmentMasters";
			public const string processstage_recurringappointmentmasters = "processstage_recurringappointmentmasters";
			public const string Quote_RecurringAppointmentMasters = "Quote_RecurringAppointmentMasters";
			public const string recurrencerule_recurringappointmentmaster = "recurrencerule_recurringappointmentmaster";
			public const string SalesOrder_RecurringAppointmentMasters = "SalesOrder_RecurringAppointmentMasters";
			public const string service_recurringappointmentmasters = "service_recurringappointmentmasters";
			public const string team_recurringappointmentmaster = "team_recurringappointmentmaster";
			public const string TransactionCurrency_RecurringAppointmentMaster = "TransactionCurrency_RecurringAppointmentMaster";
			public const string user_recurringappointmentmaster = "user_recurringappointmentmaster";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RecurringAppointmentMaster() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "recurringappointmentmaster";
		
		public const string EntitySchemaName = "RecurringAppointmentMaster";
		
		public const string PrimaryIdAttribute = "activityid";
		
		public const string PrimaryNameAttribute = "subject";
		
		public const int EntityTypeCode = 4251;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public System.Nullable<System.Guid> ActivityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("activityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ActivityId");
				this.SetAttributeValue("activityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("ActivityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.ActivityId = value;
			}
		}
		
		/// <summary>
		/// Type of activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activitytypecode")]
		public string ActivityTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("activitytypecode");
			}
		}
		
		/// <summary>
		/// Type a category to identify the recurring appointment type, such as status meeting or service call, to tie the appointment to a business group or function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("category")]
		public string Category
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("category");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Category");
				this.SetAttributeValue("category", value);
				this.OnPropertyChanged("Category");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// The day of the month on which the recurring appointment occurs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dayofmonth")]
		public System.Nullable<int> DayOfMonth
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dayofmonth");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DayOfMonth");
				this.SetAttributeValue("dayofmonth", value);
				this.OnPropertyChanged("DayOfMonth");
			}
		}
		
		/// <summary>
		/// Bitmask that represents the days of the week on which the recurring appointment occurs.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("daysofweekmask")]
		public System.Nullable<int> DaysOfWeekMask
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("daysofweekmask");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DaysOfWeekMask");
				this.SetAttributeValue("daysofweekmask", value);
				this.OnPropertyChanged("DaysOfWeekMask");
			}
		}
		
		/// <summary>
		/// List of deleted instances of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("deletedexceptionslist")]
		public string DeletedExceptionsList
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("deletedexceptionslist");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the recurring appointment, such as key talking points or objectives.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Duration of the recurring appointment series in minutes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("duration")]
		public System.Nullable<int> Duration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("duration");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Duration");
				this.SetAttributeValue("duration", value);
				this.OnPropertyChanged("Duration");
			}
		}
		
		/// <summary>
		/// Actual end date of the recurring appointment series based on the specified end date and recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectiveenddate")]
		public System.Nullable<System.DateTime> EffectiveEndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectiveenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EffectiveEndDate");
				this.SetAttributeValue("effectiveenddate", value);
				this.OnPropertyChanged("EffectiveEndDate");
			}
		}
		
		/// <summary>
		/// Actual start date of the recurring appointment series based on the specified start date and recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("effectivestartdate")]
		public System.Nullable<System.DateTime> EffectiveStartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("effectivestartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EffectiveStartDate");
				this.SetAttributeValue("effectivestartdate", value);
				this.OnPropertyChanged("EffectiveStartDate");
			}
		}
		
		/// <summary>
		/// End time of the associated activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("endtime")]
		public System.Nullable<System.DateTime> EndTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("endtime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EndTime");
				this.SetAttributeValue("endtime", value);
				this.OnPropertyChanged("EndTime");
			}
		}
		
		/// <summary>
		/// Shows the conversion rate of the record's currency. The exchange rate is used to convert all money fields in the record from the local currency to the system's default currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("exchangerate")]
		public System.Nullable<decimal> ExchangeRate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<decimal>>("exchangerate");
			}
		}
		
		/// <summary>
		/// State code to indicate whether the recurring appointment series is expanded fully or partially.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expansionstatecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue ExpansionStateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("expansionstatecode");
			}
		}
		
		/// <summary>
		/// First day of week for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("firstdayofweek")]
		public System.Nullable<int> FirstDayOfWeek
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("firstdayofweek");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("FirstDayOfWeek");
				this.SetAttributeValue("firstdayofweek", value);
				this.OnPropertyChanged("FirstDayOfWeek");
			}
		}
		
		/// <summary>
		/// Unique Outlook identifier to correlate recurring appointment series across Exchange mailboxes.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("globalobjectid")]
		public string GlobalObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("globalobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("GlobalObjectId");
				this.SetAttributeValue("globalobjectid", value);
				this.OnPropertyChanged("GlobalObjectId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurring appointment series for which the recurrence information was updated. 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("groupid")]
		public Microsoft.Xrm.Sdk.EntityReference GroupId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("groupid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the data import or data migration that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Specifies the recurring appointment series to occur on every Nth day of a month. Valid for monthly and yearly recurrence patterns only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
		public Microsoft.Xrm.Sdk.OptionSetValue Instance
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instance");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Instance");
				this.SetAttributeValue("instance", value);
				this.OnPropertyChanged("Instance");
			}
		}
		
		/// <summary>
		/// Type of instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public Microsoft.Xrm.Sdk.OptionSetValue InstanceTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("instancetypecode");
			}
		}
		
		/// <summary>
		/// Number of units of a given recurrence type between occurrences.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("interval")]
		public System.Nullable<int> Interval
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("interval");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Interval");
				this.SetAttributeValue("interval", value);
				this.OnPropertyChanged("Interval");
			}
		}
		
		/// <summary>
		/// Select whether the recurring appointment is an all-day event to make sure that the required resources are scheduled for the full day.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isalldayevent")]
		public System.Nullable<bool> IsAllDayEvent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isalldayevent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsAllDayEvent");
				this.SetAttributeValue("isalldayevent", value);
				this.OnPropertyChanged("IsAllDayEvent");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series was billed as part of resolving a case.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isbilled")]
		public System.Nullable<bool> IsBilled
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isbilled");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsBilled");
				this.SetAttributeValue("isbilled", value);
				this.OnPropertyChanged("IsBilled");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismapiprivate")]
		public System.Nullable<bool> IsMapiPrivate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismapiprivate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsMapiPrivate");
				this.SetAttributeValue("ismapiprivate", value);
				this.OnPropertyChanged("IsMapiPrivate");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series should occur after every N months. Valid for monthly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthmonthly")]
		public System.Nullable<bool> IsNthMonthly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthmonthly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsNthMonthly");
				this.SetAttributeValue("isnthmonthly", value);
				this.OnPropertyChanged("IsNthMonthly");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series should occur after every N years. Valid for yearly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isnthyearly")]
		public System.Nullable<bool> IsNthYearly
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isnthyearly");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsNthYearly");
				this.SetAttributeValue("isnthyearly", value);
				this.OnPropertyChanged("IsNthYearly");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregenerate")]
		public System.Nullable<bool> IsRegenerate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregenerate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsRegenerate");
				this.SetAttributeValue("isregenerate", value);
				this.OnPropertyChanged("IsRegenerate");
			}
		}
		
		/// <summary>
		/// Indicates whether the activity is a regular activity type or event type.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isregularactivity")]
		public System.Nullable<bool> IsRegularActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isregularactivity");
			}
		}
		
		/// <summary>
		/// Indicates whether the weekly recurrence pattern is a daily weekday pattern. Valid for weekly recurrence pattern only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isweekdaypattern")]
		public System.Nullable<bool> IsWeekDayPattern
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isweekdaypattern");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsWeekDayPattern");
				this.SetAttributeValue("isweekdaypattern", value);
				this.OnPropertyChanged("IsWeekDayPattern");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series was created from a workflow rule.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isworkflowcreated")]
		public System.Nullable<bool> IsWorkflowCreated
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isworkflowcreated");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsWorkflowCreated");
				this.SetAttributeValue("isworkflowcreated", value);
				this.OnPropertyChanged("IsWorkflowCreated");
			}
		}
		
		/// <summary>
		/// Date of last expanded instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("lastexpandedinstancedate")]
		public System.Nullable<System.DateTime> LastExpandedInstanceDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("lastexpandedinstancedate");
			}
		}
		
		/// <summary>
		/// Type the location where the recurring appointment will take place, such as a conference room or customer office.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("location")]
		public string Location
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("location");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Location");
				this.SetAttributeValue("location", value);
				this.OnPropertyChanged("Location");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics CRM options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Indicates the month of the year for the recurrence pattern.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
		public Microsoft.Xrm.Sdk.OptionSetValue MonthOfYear
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("monthofyear");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("MonthOfYear");
				this.SetAttributeValue("monthofyear", value);
				this.OnPropertyChanged("MonthOfYear");
			}
		}
		
		/// <summary>
		/// Date of the next expanded instance of a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nextexpansioninstancedate")]
		public System.Nullable<System.DateTime> NextExpansionInstanceDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("nextexpansioninstancedate");
			}
		}
		
		/// <summary>
		/// Number of appointment occurrences in a recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("occurrences")]
		public System.Nullable<int> Occurrences
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("occurrences");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Occurrences");
				this.SetAttributeValue("occurrences", value);
				this.OnPropertyChanged("Occurrences");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, user, or other equipment resources that are not needed at the recurring appointment, but can optionally attend.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("optionalattendees")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.ActivityParty> OptionalAttendees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("optionalattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Ocas.Domestic.Crm.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OptionalAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("optionalattendees", value);
				}
				else
				{
					this.SetAttributeValue("optionalattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("OptionalAttendees");
			}
		}
		
		/// <summary>
		/// Enter the user who is in charge of coordinating or leading the recurring appointment to make sure the appointment is displayed in the user's My Activities view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizer")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.ActivityParty> Organizer
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("organizer");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Ocas.Domestic.Crm.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Organizer");
				if ((value == null))
				{
					this.SetAttributeValue("organizer", value);
				}
				else
				{
					this.SetAttributeValue("organizer", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("Organizer");
			}
		}
		
		/// <summary>
		/// Unique identifier of the Microsoft Office Outlook recurring appointment series owner that correlates to the PR_OWNER_APPT_ID MAPI property.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("outlookownerapptid")]
		public System.Nullable<int> OutlookOwnerApptId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("outlookownerapptid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OutlookOwnerApptId");
				this.SetAttributeValue("outlookownerapptid", value);
				this.OnPropertyChanged("OutlookOwnerApptId");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// End date of the recurrence range.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternenddate")]
		public System.Nullable<System.DateTime> PatternEndDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternenddate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PatternEndDate");
				this.SetAttributeValue("patternenddate", value);
				this.OnPropertyChanged("PatternEndDate");
			}
		}
		
		/// <summary>
		/// Select the type of end date for the recurring appointment, such as no end date or the number of occurrences.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
		public Microsoft.Xrm.Sdk.OptionSetValue PatternEndType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("patternendtype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PatternEndType");
				this.SetAttributeValue("patternendtype", value);
				this.OnPropertyChanged("PatternEndType");
			}
		}
		
		/// <summary>
		/// Start date of the recurrence range.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternstartdate")]
		public System.Nullable<System.DateTime> PatternStartDate
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("patternstartdate");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PatternStartDate");
				this.SetAttributeValue("patternstartdate", value);
				this.OnPropertyChanged("PatternStartDate");
			}
		}
		
		/// <summary>
		/// Select the priority so that preferred customers or critical issues are handled quickly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public Microsoft.Xrm.Sdk.OptionSetValue PriorityCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("prioritycode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PriorityCode");
				this.SetAttributeValue("prioritycode", value);
				this.OnPropertyChanged("PriorityCode");
			}
		}
		
		/// <summary>
		/// Shows the ID of the process.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("processid")]
		public System.Nullable<System.Guid> ProcessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("processid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProcessId");
				this.SetAttributeValue("processid", value);
				this.OnPropertyChanged("ProcessId");
			}
		}
		
		/// <summary>
		/// Select the pattern type for the recurring appointment to indicate whether the appointment occurs daily, weekly, monthly, or yearly.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
		public Microsoft.Xrm.Sdk.OptionSetValue RecurrencePatternType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("recurrencepatterntype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurrencePatternType");
				this.SetAttributeValue("recurrencepatterntype", value);
				this.OnPropertyChanged("RecurrencePatternType");
			}
		}
		
		/// <summary>
		/// Unique identifier of the object with which the recurring appointment series is associated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Enter the account, contact, lead, user, or other equipment resources that are required to attend the recurring appointment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredattendees")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.ActivityParty> RequiredAttendees
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.EntityCollection collection = this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityCollection>("requiredattendees");
				if (((collection != null) 
							&& (collection.Entities != null)))
				{
					return System.Linq.Enumerable.Cast<Ocas.Domestic.Crm.Entities.ActivityParty>(collection.Entities);
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequiredAttendees");
				if ((value == null))
				{
					this.SetAttributeValue("requiredattendees", value);
				}
				else
				{
					this.SetAttributeValue("requiredattendees", new Microsoft.Xrm.Sdk.EntityCollection(new System.Collections.Generic.List<Microsoft.Xrm.Sdk.Entity>(value)));
				}
				this.OnPropertyChanged("RequiredAttendees");
			}
		}
		
		/// <summary>
		/// Unique identifier of the recurrence rule that is associated with the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ruleid")]
		public Microsoft.Xrm.Sdk.EntityReference RuleId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ruleid");
			}
		}
		
		/// <summary>
		/// Scheduled end time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledend")]
		public System.Nullable<System.DateTime> ScheduledEnd
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledend");
			}
		}
		
		/// <summary>
		/// Scheduled start time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("scheduledstart")]
		public System.Nullable<System.DateTime> ScheduledStart
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("scheduledstart");
			}
		}
		
		/// <summary>
		/// Indicates whether the recurring appointment series is active or inactive.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("seriesstatus")]
		public System.Nullable<bool> SeriesStatus
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("seriesstatus");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SeriesStatus");
				this.SetAttributeValue("seriesstatus", value);
				this.OnPropertyChanged("SeriesStatus");
			}
		}
		
		/// <summary>
		/// Unique identifier for an associated service.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		public Microsoft.Xrm.Sdk.EntityReference ServiceId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("serviceid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ServiceId");
				this.SetAttributeValue("serviceid", value);
				this.OnPropertyChanged("ServiceId");
			}
		}
		
		/// <summary>
		/// Shows the ID of the stage.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		public System.Nullable<System.Guid> StageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("stageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StageId");
				this.SetAttributeValue("stageid", value);
				this.OnPropertyChanged("StageId");
			}
		}
		
		/// <summary>
		/// Start time of the recurring appointment series.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("starttime")]
		public System.Nullable<System.DateTime> StartTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("starttime");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StartTime");
				this.SetAttributeValue("starttime", value);
				this.OnPropertyChanged("StartTime");
			}
		}
		
		/// <summary>
		/// Shows whether the recurring appointment is open, scheduled, completed, or canceled. Completed and canceled appointments are read-only and can't be edited.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<Ocas.Domestic.Crm.Entities.RecurringAppointmentMasterState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((Ocas.Domestic.Crm.Entities.RecurringAppointmentMasterState)(System.Enum.ToObject(typeof(Ocas.Domestic.Crm.Entities.RecurringAppointmentMasterState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the recurring appointment's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public Microsoft.Xrm.Sdk.OptionSetValue StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statuscode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Type a subcategory to identify the recurring appointment type and relate the activity to a specific product, sales region, business group, or other function.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subcategory")]
		public string Subcategory
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subcategory");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Subcategory");
				this.SetAttributeValue("subcategory", value);
				this.OnPropertyChanged("Subcategory");
			}
		}
		
		/// <summary>
		/// Type a short description about the objective or primary topic of the recurring appointment.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subject")]
		public string Subject
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("subject");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Subject");
				this.SetAttributeValue("subject", value);
				this.OnPropertyChanged("Subject");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subscriptionid")]
		public System.Nullable<System.Guid> SubscriptionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subscriptionid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SubscriptionId");
				this.SetAttributeValue("subscriptionid", value);
				this.OnPropertyChanged("SubscriptionId");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Choose the local currency for the record to make sure budgets are reported in the correct currency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		public Microsoft.Xrm.Sdk.EntityReference TransactionCurrencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("transactioncurrencyid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrencyId");
				this.SetAttributeValue("transactioncurrencyid", value);
				this.OnPropertyChanged("TransactionCurrencyId");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_activity_parties
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_activity_parties")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.ActivityParty> recurringappointmentmaster_activity_parties
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.ActivityParty>("recurringappointmentmaster_activity_parties", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_activity_parties");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.ActivityParty>("recurringappointmentmaster_activity_parties", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_activity_parties");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_Annotation
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_Annotation")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.Annotation> RecurringAppointmentMaster_Annotation
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.Annotation>("RecurringAppointmentMaster_Annotation", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_Annotation");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.Annotation>("RecurringAppointmentMaster_Annotation", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_Annotation");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_appointment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_appointment")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.Appointment> recurringappointmentmaster_appointment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.Appointment>("recurringappointmentmaster_appointment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_appointment");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.Appointment>("recurringappointmentmaster_appointment", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_appointment");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.AsyncOperation> RecurringAppointmentMaster_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.AsyncOperation>("RecurringAppointmentMaster_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_AsyncOperations");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.AsyncOperation>("RecurringAppointmentMaster_AsyncOperations", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.BulkDeleteFailure> RecurringAppointmentMaster_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.BulkDeleteFailure>("RecurringAppointmentMaster_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_BulkDeleteFailures");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.BulkDeleteFailure>("RecurringAppointmentMaster_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_campaignresponse
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_campaignresponse")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.CampaignResponse> recurringappointmentmaster_campaignresponse
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.CampaignResponse>("recurringappointmentmaster_campaignresponse", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_campaignresponse");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.CampaignResponse>("recurringappointmentmaster_campaignresponse", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_campaignresponse");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_connections1
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_connections1")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.Connection> recurringappointmentmaster_connections1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.Connection>("recurringappointmentmaster_connections1", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_connections1");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.Connection>("recurringappointmentmaster_connections1", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_connections1");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_connections2
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_connections2")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.Connection> recurringappointmentmaster_connections2
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.Connection>("recurringappointmentmaster_connections2", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_connections2");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.Connection>("recurringappointmentmaster_connections2", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_connections2");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_DuplicateBaseRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_DuplicateBaseRecord")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.DuplicateRecord> RecurringAppointmentMaster_DuplicateBaseRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.DuplicateRecord>("RecurringAppointmentMaster_DuplicateBaseRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_DuplicateBaseRecord");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.DuplicateRecord>("RecurringAppointmentMaster_DuplicateBaseRecord", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_DuplicateBaseRecord");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_DuplicateMatchingRecord
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_DuplicateMatchingRecord")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.DuplicateRecord> RecurringAppointmentMaster_DuplicateMatchingRecord
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.DuplicateRecord>("RecurringAppointmentMaster_DuplicateMatchingRecord", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_DuplicateMatchingRecord");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.DuplicateRecord>("RecurringAppointmentMaster_DuplicateMatchingRecord", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_DuplicateMatchingRecord");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_PostFollows
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_PostFollows")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.PostFollow> recurringappointmentmaster_PostFollows
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.PostFollow>("recurringappointmentmaster_PostFollows", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_PostFollows");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.PostFollow>("recurringappointmentmaster_PostFollows", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_PostFollows");
			}
		}
		
		/// <summary>
		/// 1:N recurringappointmentmaster_principalobjectattributeaccess
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurringappointmentmaster_principalobjectattributeaccess")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.PrincipalObjectAttributeAccess> recurringappointmentmaster_principalobjectattributeaccess
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.PrincipalObjectAttributeAccess>("recurringappointmentmaster_principalobjectattributeaccess", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurringappointmentmaster_principalobjectattributeaccess");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.PrincipalObjectAttributeAccess>("recurringappointmentmaster_principalobjectattributeaccess", null, value);
				this.OnPropertyChanged("recurringappointmentmaster_principalobjectattributeaccess");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_ProcessSessions
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_ProcessSessions")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.ProcessSession> RecurringAppointmentMaster_ProcessSessions
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.ProcessSession>("RecurringAppointmentMaster_ProcessSessions", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_ProcessSessions");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.ProcessSession>("RecurringAppointmentMaster_ProcessSessions", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_ProcessSessions");
			}
		}
		
		/// <summary>
		/// 1:N RecurringAppointmentMaster_QueueItem
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RecurringAppointmentMaster_QueueItem")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.QueueItem> RecurringAppointmentMaster_QueueItem
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.QueueItem>("RecurringAppointmentMaster_QueueItem", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RecurringAppointmentMaster_QueueItem");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.QueueItem>("RecurringAppointmentMaster_QueueItem", null, value);
				this.OnPropertyChanged("RecurringAppointmentMaster_QueueItem");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_recurringappointmentmaster")]
		public System.Collections.Generic.IEnumerable<Ocas.Domestic.Crm.Entities.UserEntityInstanceData> userentityinstancedata_recurringappointmentmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<Ocas.Domestic.Crm.Entities.UserEntityInstanceData>("userentityinstancedata_recurringappointmentmaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_recurringappointmentmaster");
				this.SetRelatedEntities<Ocas.Domestic.Crm.Entities.UserEntityInstanceData>("userentityinstancedata_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("userentityinstancedata_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// N:1 Account_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Account_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Account Account_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Account>("Account_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Account_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Account>("Account_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Account_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 activity_pointer_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("activity_pointer_recurringappointmentmaster")]
		public Ocas.Domestic.Crm.Entities.ActivityPointer activity_pointer_recurringappointmentmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ActivityPointer>("activity_pointer_recurringappointmentmaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("activity_pointer_recurringappointmentmaster");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ActivityPointer>("activity_pointer_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("activity_pointer_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// N:1 adx_webpage_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_webpage_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Adx_webpage adx_webpage_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Adx_webpage>("adx_webpage_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("adx_webpage_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Adx_webpage>("adx_webpage_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("adx_webpage_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 adx_website_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("adx_website_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Adx_website adx_website_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Adx_website>("adx_website_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("adx_website_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Adx_website>("adx_website_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("adx_website_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 BulkOperation_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BulkOperation_RecurringAppointmentMaster")]
		public Ocas.Domestic.Crm.Entities.BulkOperation BulkOperation_RecurringAppointmentMaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.BulkOperation>("BulkOperation_RecurringAppointmentMaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BulkOperation_RecurringAppointmentMaster");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.BulkOperation>("BulkOperation_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("BulkOperation_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_recurringappointmentmaster_activities
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_recurringappointmentmaster_activities")]
		public Ocas.Domestic.Crm.Entities.BusinessUnit business_unit_recurringappointmentmaster_activities
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.BusinessUnit>("business_unit_recurringappointmentmaster_activities", null);
			}
		}
		
		/// <summary>
		/// N:1 Campaign_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Campaign_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Campaign Campaign_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Campaign>("Campaign_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Campaign_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Campaign>("Campaign_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Campaign_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 CampaignActivity_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("CampaignActivity_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.CampaignActivity CampaignActivity_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CampaignActivity_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.CampaignActivity>("CampaignActivity_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("CampaignActivity_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Contact_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contact_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Contact Contact_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Contact>("Contact_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Contact_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Contact>("Contact_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Contact_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Contract_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Contract_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Contract Contract_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Contract>("Contract_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Contract_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Contract>("Contract_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Contract_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 entitlement_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlement_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Entitlement entitlement_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Entitlement>("entitlement_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlement_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Entitlement>("entitlement_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("entitlement_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 entitlementtemplate_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entitlementtemplate_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.EntitlementTemplate entitlementtemplate_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entitlementtemplate_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.EntitlementTemplate>("entitlementtemplate_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("entitlementtemplate_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Incident_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Incident_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Incident Incident_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Incident>("Incident_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Incident_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Incident>("Incident_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Incident_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Invoice_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Invoice_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Invoice Invoice_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Invoice>("Invoice_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Invoice_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Invoice>("Invoice_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Invoice_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Lead_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Lead_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Lead Lead_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Lead>("Lead_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Lead_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Lead>("Lead_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Lead_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdby")]
		public Ocas.Domestic.Crm.Entities.SystemUser lk_recurringappointmentmaster_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_createdonbehalfby")]
		public Ocas.Domestic.Crm.Entities.SystemUser lk_recurringappointmentmaster_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_recurringappointmentmaster_createdonbehalfby");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_recurringappointmentmaster_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedby")]
		public Ocas.Domestic.Crm.Entities.SystemUser lk_recurringappointmentmaster_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_recurringappointmentmaster_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_recurringappointmentmaster_modifiedonbehalfby")]
		public Ocas.Domestic.Crm.Entities.SystemUser lk_recurringappointmentmaster_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_recurringappointmentmaster_modifiedonbehalfby");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("lk_recurringappointmentmaster_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_recurringappointmentmaster_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 msdyn_postalbum_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_postalbum_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.msdyn_PostAlbum msdyn_postalbum_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.msdyn_PostAlbum>("msdyn_postalbum_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_postalbum_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.msdyn_PostAlbum>("msdyn_postalbum_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("msdyn_postalbum_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_academicdata_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_academicdata_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_academicdata ocaslr_academicdata_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_academicdata>("ocaslr_academicdata_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_academicdata_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_academicdata>("ocaslr_academicdata_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_academicdata_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_acceptedprivacystatement_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_acceptedprivacystatement_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_acceptedprivacystatement ocaslr_acceptedprivacystatement_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_acceptedprivacystatement>("ocaslr_acceptedprivacystatement_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_acceptedprivacystatement_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_acceptedprivacystatement>("ocaslr_acceptedprivacystatement_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_acceptedprivacystatement_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_applicantactivity_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_applicantactivity_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_applicantactivity ocaslr_applicantactivity_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantactivity>("ocaslr_applicantactivity_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_applicantactivity_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantactivity>("ocaslr_applicantactivity_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_applicantactivity_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_applicantmessage_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_applicantmessage_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_applicantmessage ocaslr_applicantmessage_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantmessage>("ocaslr_applicantmessage_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_applicantmessage_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantmessage>("ocaslr_applicantmessage_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_applicantmessage_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_applicantscholarship_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_applicantscholarship_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_applicantscholarship ocaslr_applicantscholarship_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantscholarship>("ocaslr_applicantscholarship_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_applicantscholarship_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicantscholarship>("ocaslr_applicantscholarship_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_applicantscholarship_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_application_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_application_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_application ocaslr_application_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_application>("ocaslr_application_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_application_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_application>("ocaslr_application_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_application_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_applicationcycle_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_applicationcycle_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_applicationcycle ocaslr_applicationcycle_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicationcycle>("ocaslr_applicationcycle_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_applicationcycle_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_applicationcycle>("ocaslr_applicationcycle_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_applicationcycle_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_collegeapplicationcycle_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_collegeapplicationcycle_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_collegeapplicationcycle ocaslr_collegeapplicationcycle_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_collegeapplicationcycle>("ocaslr_collegeapplicationcycle_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_collegeapplicationcycle_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_collegeapplicationcycle>("ocaslr_collegeapplicationcycle_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_collegeapplicationcycle_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_collegeinformation_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_collegeinformation_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_collegeinformation ocaslr_collegeinformation_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_collegeinformation>("ocaslr_collegeinformation_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_collegeinformation_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_collegeinformation>("ocaslr_collegeinformation_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_collegeinformation_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_comments_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_comments_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_comments ocaslr_comments_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_comments>("ocaslr_comments_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_comments_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_comments>("ocaslr_comments_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_comments_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_editexception_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_editexception_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_editexception ocaslr_editexception_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_editexception>("ocaslr_editexception_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_editexception_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_editexception>("ocaslr_editexception_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_editexception_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_education_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_education_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_education ocaslr_education_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_education>("ocaslr_education_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_education_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_education>("ocaslr_education_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_education_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumentsubtype ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumentsubtype>("ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumentsubtype>("ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmsdocumentsubtype_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmsdocumenttype_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmsdocumenttype_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumenttype ocaslr_etmsdocumenttype_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumenttype>("ocaslr_etmsdocumenttype_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmsdocumenttype_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsdocumenttype>("ocaslr_etmsdocumenttype_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmsdocumenttype_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmsfileformat_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmsfileformat_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmsfileformat ocaslr_etmsfileformat_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsfileformat>("ocaslr_etmsfileformat_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmsfileformat_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsfileformat>("ocaslr_etmsfileformat_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmsfileformat_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmsnotificationsubscription ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsnotificationsubscription>("ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmsnotificationsubscription>("ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmsnotificationsubscription_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmspartnerrole_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmspartnerrole_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmspartnerrole ocaslr_etmspartnerrole_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmspartnerrole>("ocaslr_etmspartnerrole_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmspartnerrole_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmspartnerrole>("ocaslr_etmspartnerrole_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmspartnerrole_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscript_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscript_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscript ocaslr_etmstranscript_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscript>("ocaslr_etmstranscript_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscript_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscript>("ocaslr_etmstranscript_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscript_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptfileupload ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptfileupload>("ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptfileupload>("ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscriptfileupload_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscriptrequest_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscriptrequest_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequest ocaslr_etmstranscriptrequest_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequest>("ocaslr_etmstranscriptrequest_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscriptrequest_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequest>("ocaslr_etmstranscriptrequest_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscriptrequest_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocess ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocess>("ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocess>("ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscriptrequestprocess_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocesstransaction ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocesstransaction>("ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscriptrequestprocesstransaction>("ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscriptrequestprocesstransaction_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_etmstranscripttype_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_etmstranscripttype_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscripttype ocaslr_etmstranscripttype_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscripttype>("ocaslr_etmstranscripttype_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_etmstranscripttype_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_etmstranscripttype>("ocaslr_etmstranscripttype_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_etmstranscripttype_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_financialtransaction_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_financialtransaction_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_financialtransaction ocaslr_financialtransaction_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_financialtransaction>("ocaslr_financialtransaction_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_financialtransaction_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_financialtransaction>("ocaslr_financialtransaction_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_financialtransaction_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_graderecordstatus_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_graderecordstatus_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_graderecordstatus ocaslr_graderecordstatus_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_graderecordstatus>("ocaslr_graderecordstatus_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_graderecordstatus_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_graderecordstatus>("ocaslr_graderecordstatus_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_graderecordstatus_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_helpfeature_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_helpfeature_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_helpfeature ocaslr_helpfeature_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpfeature>("ocaslr_helpfeature_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_helpfeature_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpfeature>("ocaslr_helpfeature_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_helpfeature_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_helpitem_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_helpitem_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_helpitem ocaslr_helpitem_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpitem>("ocaslr_helpitem_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_helpitem_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpitem>("ocaslr_helpitem_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_helpitem_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_helpsection_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_helpsection_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_helpsection ocaslr_helpsection_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpsection>("ocaslr_helpsection_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_helpsection_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_helpsection>("ocaslr_helpsection_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_helpsection_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_institute_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_institute_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_institute ocaslr_institute_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_institute>("ocaslr_institute_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_institute_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_institute>("ocaslr_institute_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_institute_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_internationalcreditassessment_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_internationalcreditassessment_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_internationalcreditassessment ocaslr_internationalcreditassessment_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_internationalcreditassessment>("ocaslr_internationalcreditassessment_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_internationalcreditassessment_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_internationalcreditassessment>("ocaslr_internationalcreditassessment_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_internationalcreditassessment_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_internationalstudentcoursecredit ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_internationalstudentcoursecredit>("ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_internationalstudentcoursecredit>("ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_internationalstudentcoursecredit_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_jobexperience_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_jobexperience_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_jobexperience ocaslr_jobexperience_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_jobexperience>("ocaslr_jobexperience_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_jobexperience_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_jobexperience>("ocaslr_jobexperience_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_jobexperience_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_monerispayments_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_monerispayments_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_monerispayments ocaslr_monerispayments_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_monerispayments>("ocaslr_monerispayments_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_monerispayments_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_monerispayments>("ocaslr_monerispayments_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_monerispayments_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_norminggroup_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_norminggroup_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_norminggroup ocaslr_norminggroup_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_norminggroup>("ocaslr_norminggroup_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_norminggroup_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_norminggroup>("ocaslr_norminggroup_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_norminggroup_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ocfileerrormessage_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ocfileerrormessage_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ocfileerrormessage ocaslr_ocfileerrormessage_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileerrormessage>("ocaslr_ocfileerrormessage_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ocfileerrormessage_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileerrormessage>("ocaslr_ocfileerrormessage_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ocfileerrormessage_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ocfileprocessdetail_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ocfileprocessdetail_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessdetail ocaslr_ocfileprocessdetail_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessdetail>("ocaslr_ocfileprocessdetail_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ocfileprocessdetail_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessdetail>("ocaslr_ocfileprocessdetail_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ocfileprocessdetail_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ocfileprocessheader_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ocfileprocessheader_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessheader ocaslr_ocfileprocessheader_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessheader>("ocaslr_ocfileprocessheader_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ocfileprocessheader_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ocfileprocessheader>("ocaslr_ocfileprocessheader_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ocfileprocessheader_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_oenbatch_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_oenbatch_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_oenbatch ocaslr_oenbatch_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_oenbatch>("ocaslr_oenbatch_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_oenbatch_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_oenbatch>("ocaslr_oenbatch_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_oenbatch_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_oenbatchapplicant_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_oenbatchapplicant_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_oenbatchapplicant ocaslr_oenbatchapplicant_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_oenbatchapplicant>("ocaslr_oenbatchapplicant_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_oenbatchapplicant_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_oenbatchapplicant>("ocaslr_oenbatchapplicant_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_oenbatchapplicant_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_offer_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_offer_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_offer ocaslr_offer_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_offer>("ocaslr_offer_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_offer_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_offer>("ocaslr_offer_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_offer_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_offeracceptance_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_offeracceptance_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_offeracceptance ocaslr_offeracceptance_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_offeracceptance>("ocaslr_offeracceptance_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_offeracceptance_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_offeracceptance>("ocaslr_offeracceptance_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_offeracceptance_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ontariohighschoolcoursecodes ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ontariohighschoolcoursecodes>("ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ontariohighschoolcoursecodes>("ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ontariohighschoolcoursecodes_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ontariostudentcoursecredit ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ontariostudentcoursecredit>("ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ontariostudentcoursecredit>("ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ontariostudentcoursecredit_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_ostupload_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_ostupload_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_ostupload ocaslr_ostupload_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ostupload>("ocaslr_ostupload_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_ostupload_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_ostupload>("ocaslr_ostupload_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_ostupload_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_paymentresult_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_paymentresult_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_paymentresult ocaslr_paymentresult_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_paymentresult>("ocaslr_paymentresult_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_paymentresult_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_paymentresult>("ocaslr_paymentresult_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_paymentresult_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_paymenttransactiondetail_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_paymenttransactiondetail_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_paymenttransactiondetail ocaslr_paymenttransactiondetail_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_paymenttransactiondetail>("ocaslr_paymenttransactiondetail_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_paymenttransactiondetail_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_paymenttransactiondetail>("ocaslr_paymenttransactiondetail_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_paymenttransactiondetail_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_peterequestlog_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_peterequestlog_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_peterequestlog ocaslr_peterequestlog_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_peterequestlog>("ocaslr_peterequestlog_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_peterequestlog_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_peterequestlog>("ocaslr_peterequestlog_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_peterequestlog_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_privacystatement_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_privacystatement_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_privacystatement ocaslr_privacystatement_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_privacystatement>("ocaslr_privacystatement_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_privacystatement_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_privacystatement>("ocaslr_privacystatement_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_privacystatement_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_program_entrylevels_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_program_entrylevels_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_program_entrylevels ocaslr_program_entrylevels_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_program_entrylevels>("ocaslr_program_entrylevels_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_program_entrylevels_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_program_entrylevels>("ocaslr_program_entrylevels_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_program_entrylevels_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_programchoice_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_programchoice_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_programchoice ocaslr_programchoice_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_programchoice>("ocaslr_programchoice_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_programchoice_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_programchoice>("ocaslr_programchoice_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_programchoice_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_programintakeentrysemester_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_programintakeentrysemester_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_programintakeentrysemester ocaslr_programintakeentrysemester_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_programintakeentrysemester>("ocaslr_programintakeentrysemester_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_programintakeentrysemester_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_programintakeentrysemester>("ocaslr_programintakeentrysemester_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_programintakeentrysemester_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_secondconsentapplicant_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_secondconsentapplicant_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_secondconsentapplicant ocaslr_secondconsentapplicant_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_secondconsentapplicant>("ocaslr_secondconsentapplicant_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_secondconsentapplicant_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_secondconsentapplicant>("ocaslr_secondconsentapplicant_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_secondconsentapplicant_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_shsmcompletion_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_shsmcompletion_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_shsmcompletion ocaslr_shsmcompletion_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_shsmcompletion>("ocaslr_shsmcompletion_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_shsmcompletion_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_shsmcompletion>("ocaslr_shsmcompletion_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_shsmcompletion_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_softmergecandidate_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_softmergecandidate_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_softmergecandidate ocaslr_softmergecandidate_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_softmergecandidate>("ocaslr_softmergecandidate_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_softmergecandidate_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_softmergecandidate>("ocaslr_softmergecandidate_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_softmergecandidate_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_stringresource_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_stringresource_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_stringresource ocaslr_stringresource_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_stringresource>("ocaslr_stringresource_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_stringresource_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_stringresource>("ocaslr_stringresource_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_stringresource_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_supportingdocument_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_supportingdocument_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_supportingdocument ocaslr_supportingdocument_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_supportingdocument>("ocaslr_supportingdocument_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_supportingdocument_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_supportingdocument>("ocaslr_supportingdocument_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_supportingdocument_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_systemconfiguration_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_systemconfiguration_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_systemconfiguration ocaslr_systemconfiguration_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_systemconfiguration>("ocaslr_systemconfiguration_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_systemconfiguration_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_systemconfiguration>("ocaslr_systemconfiguration_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_systemconfiguration_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_test_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_test_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_test ocaslr_test_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_test>("ocaslr_test_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_test_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_test>("ocaslr_test_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_test_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_testdetail_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_testdetail_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_testdetail ocaslr_testdetail_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_testdetail>("ocaslr_testdetail_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_testdetail_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_testdetail>("ocaslr_testdetail_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_testdetail_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_timezone_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_timezone_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_timezone ocaslr_timezone_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_timezone>("ocaslr_timezone_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_timezone_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_timezone>("ocaslr_timezone_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_timezone_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transcript_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transcript_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transcript ocaslr_transcript_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcript>("ocaslr_transcript_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transcript_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcript>("ocaslr_transcript_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transcript_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transcriptrequest_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transcriptrequest_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transcriptrequest ocaslr_transcriptrequest_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcriptrequest>("ocaslr_transcriptrequest_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transcriptrequest_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcriptrequest>("ocaslr_transcriptrequest_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transcriptrequest_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transcriptrequestexception_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transcriptrequestexception_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Ocaslr_transcriptrequestexception ocaslr_transcriptrequestexception_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_transcriptrequestexception>("ocaslr_transcriptrequestexception_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transcriptrequestexception_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Ocaslr_transcriptrequestexception>("ocaslr_transcriptrequestexception_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transcriptrequestexception_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transcripttransmission_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transcripttransmission_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transcripttransmission ocaslr_transcripttransmission_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcripttransmission>("ocaslr_transcripttransmission_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transcripttransmission_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transcripttransmission>("ocaslr_transcripttransmission_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transcripttransmission_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transmissiondetail_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transmissiondetail_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transmissiondetail ocaslr_transmissiondetail_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissiondetail>("ocaslr_transmissiondetail_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transmissiondetail_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissiondetail>("ocaslr_transmissiondetail_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transmissiondetail_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transmissionerrormessage_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transmissionerrormessage_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transmissionerrormessage ocaslr_transmissionerrormessage_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionerrormessage>("ocaslr_transmissionerrormessage_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transmissionerrormessage_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionerrormessage>("ocaslr_transmissionerrormessage_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transmissionerrormessage_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transmissionheader_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transmissionheader_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transmissionheader ocaslr_transmissionheader_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionheader>("ocaslr_transmissionheader_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transmissionheader_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionheader>("ocaslr_transmissionheader_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transmissionheader_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transmissionstatus_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transmissionstatus_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transmissionstatus ocaslr_transmissionstatus_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionstatus>("ocaslr_transmissionstatus_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transmissionstatus_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionstatus>("ocaslr_transmissionstatus_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transmissionstatus_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_transmissionsummary_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_transmissionsummary_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_transmissionsummary ocaslr_transmissionsummary_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionsummary>("ocaslr_transmissionsummary_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_transmissionsummary_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_transmissionsummary>("ocaslr_transmissionsummary_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_transmissionsummary_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_voucher_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_voucher_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_voucher ocaslr_voucher_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_voucher>("ocaslr_voucher_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_voucher_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_voucher>("ocaslr_voucher_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_voucher_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 ocaslr_vouchercodegeneration_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("ocaslr_vouchercodegeneration_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.ocaslr_vouchercodegeneration ocaslr_vouchercodegeneration_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_vouchercodegeneration>("ocaslr_vouchercodegeneration_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ocaslr_vouchercodegeneration_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ocaslr_vouchercodegeneration>("ocaslr_vouchercodegeneration_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("ocaslr_vouchercodegeneration_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 Opportunity_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Opportunity_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Opportunity Opportunity_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Opportunity>("Opportunity_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Opportunity_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Opportunity>("Opportunity_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Opportunity_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 processstage_recurringappointmentmasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("stageid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("processstage_recurringappointmentmasters")]
		public Ocas.Domestic.Crm.Entities.ProcessStage processstage_recurringappointmentmasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.ProcessStage>("processstage_recurringappointmentmasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("processstage_recurringappointmentmasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.ProcessStage>("processstage_recurringappointmentmasters", null, value);
				this.OnPropertyChanged("processstage_recurringappointmentmasters");
			}
		}
		
		/// <summary>
		/// N:1 Quote_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Quote_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.Quote Quote_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Quote>("Quote_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Quote_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Quote>("Quote_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("Quote_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 recurrencerule_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("activityid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("recurrencerule_recurringappointmentmaster")]
		public Ocas.Domestic.Crm.Entities.RecurrenceRule recurrencerule_recurringappointmentmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.RecurrenceRule>("recurrencerule_recurringappointmentmaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("recurrencerule_recurringappointmentmaster");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.RecurrenceRule>("recurrencerule_recurringappointmentmaster", null, value);
				this.OnPropertyChanged("recurrencerule_recurringappointmentmaster");
			}
		}
		
		/// <summary>
		/// N:1 SalesOrder_RecurringAppointmentMasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("SalesOrder_RecurringAppointmentMasters")]
		public Ocas.Domestic.Crm.Entities.SalesOrder SalesOrder_RecurringAppointmentMasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SalesOrder>("SalesOrder_RecurringAppointmentMasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SalesOrder_RecurringAppointmentMasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.SalesOrder>("SalesOrder_RecurringAppointmentMasters", null, value);
				this.OnPropertyChanged("SalesOrder_RecurringAppointmentMasters");
			}
		}
		
		/// <summary>
		/// N:1 service_recurringappointmentmasters
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("serviceid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("service_recurringappointmentmasters")]
		public Ocas.Domestic.Crm.Entities.Service service_recurringappointmentmasters
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Service>("service_recurringappointmentmasters", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("service_recurringappointmentmasters");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.Service>("service_recurringappointmentmasters", null, value);
				this.OnPropertyChanged("service_recurringappointmentmasters");
			}
		}
		
		/// <summary>
		/// N:1 team_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_recurringappointmentmaster")]
		public Ocas.Domestic.Crm.Entities.Team team_recurringappointmentmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.Team>("team_recurringappointmentmaster", null);
			}
		}
		
		/// <summary>
		/// N:1 TransactionCurrency_RecurringAppointmentMaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("transactioncurrencyid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("TransactionCurrency_RecurringAppointmentMaster")]
		public Ocas.Domestic.Crm.Entities.TransactionCurrency TransactionCurrency_RecurringAppointmentMaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.TransactionCurrency>("TransactionCurrency_RecurringAppointmentMaster", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TransactionCurrency_RecurringAppointmentMaster");
				this.SetRelatedEntity<Ocas.Domestic.Crm.Entities.TransactionCurrency>("TransactionCurrency_RecurringAppointmentMaster", null, value);
				this.OnPropertyChanged("TransactionCurrency_RecurringAppointmentMaster");
			}
		}
		
		/// <summary>
		/// N:1 user_recurringappointmentmaster
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_recurringappointmentmaster")]
		public Ocas.Domestic.Crm.Entities.SystemUser user_recurringappointmentmaster
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<Ocas.Domestic.Crm.Entities.SystemUser>("user_recurringappointmentmaster", null);
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("expansionstatecode")]
		public virtual RecurringAppointmentMaster_ExpansionStateCode? ExpansionStateCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_ExpansionStateCode?)(EntityOptionSetEnum.GetEnum(this, "expansionstatecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instance")]
		public virtual RecurringAppointmentMaster_Instance? InstanceEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_Instance?)(EntityOptionSetEnum.GetEnum(this, "instance")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				Instance = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("instancetypecode")]
		public virtual RecurringAppointmentMaster_InstanceTypeCode? InstanceTypeCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_InstanceTypeCode?)(EntityOptionSetEnum.GetEnum(this, "instancetypecode")));
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("monthofyear")]
		public virtual RecurrenceRule_MonthOfYear? MonthOfYearEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurrenceRule_MonthOfYear?)(EntityOptionSetEnum.GetEnum(this, "monthofyear")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				MonthOfYear = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("patternendtype")]
		public virtual RecurringAppointmentMaster_PatternEndType? PatternEndTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_PatternEndType?)(EntityOptionSetEnum.GetEnum(this, "patternendtype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				PatternEndType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("prioritycode")]
		public virtual RecurringAppointmentMaster_PriorityCode? PriorityCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_PriorityCode?)(EntityOptionSetEnum.GetEnum(this, "prioritycode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				PriorityCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("recurrencepatterntype")]
		public virtual RecurringAppointmentMaster_RecurrencePatternType? RecurrencePatternTypeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_RecurrencePatternType?)(EntityOptionSetEnum.GetEnum(this, "recurrencepatterntype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				RecurrencePatternType = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual RecurringAppointmentMaster_StatusCode? StatusCodeEnum
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((RecurringAppointmentMaster_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				StatusCode = value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null;
			}
		}
	}
}